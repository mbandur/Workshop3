AWS has unveiled AWS Lambda SnapStart for Java, a performance optimization intended to make it easier to build responsive, scalable Java applications using AWS Lambda, the serverless, event-driven compute service in the Amazon cloud. Introduced November 28, AWS Lambda SnapStart for Java improves startup times by initializing a functionâ€™s code ahead of time, taking a snapshot of the initialized execution environment, and caching it. When the function is invoked and scales up, SnapStart resumes new execution environments from the cached snapshot instead of having to initialize them from scratch, thus improving startup latency. AWS said. Elaborating on its reasoning for the service, AWS said that for latency-sensitive applications where users want to support unpredictable bursts of traffic, lengthy startup latencies can negatively impact the user experience. AWS Lambda SnapStart is ideal for applications such as interactive microservices, data processing, or synchronous APIs. Users can activate Lambda SnapStart for new or existing Java-based Lambda functions running on Amazon Corretto 11 via the AWS Lambda API, AWS Management Console, AWS Command Line Interface, and other AWS capabilities. Lambda SnapStart is generally available in AWS regions including Ohio, Northern Virginia, Oregon, Asia Pacific, and Ireland.